{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/audit-logs/[id]",
      "regex": "^/api/audit\\-logs/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/audit\\-logs/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/auth/[...nextauth]",
      "regex": "^/api/auth/(.+?)(?:/)?$",
      "routeKeys": {
        "nxtPnextauth": "nxtPnextauth"
      },
      "namedRegex": "^/api/auth/(?<nxtPnextauth>.+?)(?:/)?$"
    },
    {
      "page": "/api/drive/files/[fileId]",
      "regex": "^/api/drive/files/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPfileId": "nxtPfileId"
      },
      "namedRegex": "^/api/drive/files/(?<nxtPfileId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/drive/permissions/[permissionId]",
      "regex": "^/api/drive/permissions/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPpermissionId": "nxtPpermissionId"
      },
      "namedRegex": "^/api/drive/permissions/(?<nxtPpermissionId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/employees/[id]",
      "regex": "^/api/employees/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/employees/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/employees/[id]/alias",
      "regex": "^/api/employees/([^/]+?)/alias(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/employees/(?<nxtPid>[^/]+?)/alias(?:/)?$"
    },
    {
      "page": "/api/employees/[id]/restore",
      "regex": "^/api/employees/([^/]+?)/restore(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/employees/(?<nxtPid>[^/]+?)/restore(?:/)?$"
    },
    {
      "page": "/api/employees/[id]/suspend",
      "regex": "^/api/employees/([^/]+?)/suspend(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/api/employees/(?<nxtPid>[^/]+?)/suspend(?:/)?$"
    },
    {
      "page": "/audit.logs/[id]",
      "regex": "^/audit\\.logs/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/audit\\.logs/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/employees/[id]",
      "regex": "^/employees/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/employees/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/employees/[id]/delegate",
      "regex": "^/employees/([^/]+?)/delegate(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/employees/(?<nxtPid>[^/]+?)/delegate(?:/)?$"
    },
    {
      "page": "/employees/[id]/edit",
      "regex": "^/employees/([^/]+?)/edit(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/employees/(?<nxtPid>[^/]+?)/edit(?:/)?$"
    },
    {
      "page": "/employees/[id]/suspend",
      "regex": "^/employees/([^/]+?)/suspend(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/employees/(?<nxtPid>[^/]+?)/suspend(?:/)?$"
    },
    {
      "page": "/shared-drive/[folderId]",
      "regex": "^/shared\\-drive/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPfolderId": "nxtPfolderId"
      },
      "namedRegex": "^/shared\\-drive/(?<nxtPfolderId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/audit.logs",
      "regex": "^/audit\\.logs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/audit\\.logs(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/employees",
      "regex": "^/employees(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/employees(?:/)?$"
    },
    {
      "page": "/employees/add",
      "regex": "^/employees/add(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/employees/add(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/settings/permissions",
      "regex": "^/settings/permissions(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/permissions(?:/)?$"
    },
    {
      "page": "/settings/profile",
      "regex": "^/settings/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/profile(?:/)?$"
    },
    {
      "page": "/shared-drive",
      "regex": "^/shared\\-drive(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shared\\-drive(?:/)?$"
    },
    {
      "page": "/shared-drive/create-folder",
      "regex": "^/shared\\-drive/create\\-folder(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shared\\-drive/create\\-folder(?:/)?$"
    },
    {
      "page": "/shared-drive/upload",
      "regex": "^/shared\\-drive/upload(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/shared\\-drive/upload(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}